{
 "Resources": {
  "PowerManagementFunctionRoleCAAA1089": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSLambdaExecute"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "kms:DecryptKey",
          "lambda:InvokeFunction",
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents",
          "ssm:GetParameter",
          "ssm:GetParametersByPath"
         ],
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "PowerManagement-Function-Policy"
     }
    ],
    "RoleName": "PowerManagement-Function-ServiceRole"
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Function-Role/Resource"
   }
  },
  "PowerManagementFunctionRoleDefaultPolicy8B44BC42": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PowerManagementFunctionRoleDefaultPolicy8B44BC42",
    "Roles": [
     {
      "Ref": "PowerManagementFunctionRoleCAAA1089"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Function-Role/DefaultPolicy/Resource"
   }
  },
  "PowerManagementFunctionBC05160B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3f502bd0dd682dc6799ecff2b1e6523fe074863bdfeb4b0afa7e671692e4c639.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "PowerManagementFunctionRoleCAAA1089",
      "Arn"
     ]
    },
    "Architectures": [
     "x86_64"
    ],
    "FunctionName": "PowerManagement-Function",
    "Handler": "PowerManagement.Lambda::PowerManagement.Lambda.Function::FunctionHandler",
    "MemorySize": 128,
    "Runtime": "dotnet6",
    "Timeout": 180,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "PowerManagementFunctionRoleDefaultPolicy8B44BC42",
    "PowerManagementFunctionRoleCAAA1089"
   ],
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Function/Resource",
    "aws:asset:path": "asset.3f502bd0dd682dc6799ecff2b1e6523fe074863bdfeb4b0afa7e671692e4c639.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "PowerManagementFunctionLogRetention9D799636": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "PowerManagementFunctionBC05160B"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Function/LogRetention/Resource"
   }
  },
  "PowerManagementFunctionInvokeFcyXBRX02EWa52GlFECQiCzDt0fdRUDi4mo4foC5aU7D36A71B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PowerManagementFunctionBC05160B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com"
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Function/InvokeFcyXBRX02EWa52GlF+ECQiCzDt0fdRUDi4mo4foC5aU="
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:DeleteRetentionPolicy",
        "logs:PutRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs16.x",
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "sshactionPlan2BEAED6F": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": {
     "Ref": "SshActionPlan"
    },
    "Name": "/ssh/actionPlan"
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/--ssh--actionPlan/Resource"
   }
  },
  "PowerManagementSecondApi099AA237": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "Name": "PowerManagement-Function-Api"
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Second-Api/Resource"
   }
  },
  "PowerManagementSecondApiDeployment0DE6D7ED7bb4bd5e8d5718665f2ad90a7d3dde96": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "PowerManagementSecondApi099AA237"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "PowerManagementSecondApiproxyANY2CE180B2",
    "PowerManagementSecondApiproxyC6F378A0"
   ],
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Second-Api/Deployment/Resource"
   }
  },
  "PowerManagementSecondApiDeploymentStageprodD44714C1": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "PowerManagementSecondApi099AA237"
    },
    "DeploymentId": {
     "Ref": "PowerManagementSecondApiDeployment0DE6D7ED7bb4bd5e8d5718665f2ad90a7d3dde96"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Second-Api/DeploymentStage.prod/Resource"
   }
  },
  "PowerManagementSecondApiproxyC6F378A0": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "PowerManagementSecondApi099AA237",
      "RootResourceId"
     ]
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "PowerManagementSecondApi099AA237"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Second-Api/Default/{proxy+}/Resource"
   }
  },
  "PowerManagementSecondApiproxyANYApiPermissionPowerManagementCdkStackPowerManagementSecondApiAC3AFC3DANYproxy6B4E0334": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PowerManagementFunctionBC05160B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PowerManagementSecondApi099AA237"
       },
       "/",
       {
        "Ref": "PowerManagementSecondApiDeploymentStageprodD44714C1"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Second-Api/Default/{proxy+}/ANY/ApiPermission.PowerManagementCdkStackPowerManagementSecondApiAC3AFC3D.ANY..{proxy+}"
   }
  },
  "PowerManagementSecondApiproxyANYApiPermissionTestPowerManagementCdkStackPowerManagementSecondApiAC3AFC3DANYproxyB1AF6C5D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PowerManagementFunctionBC05160B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PowerManagementSecondApi099AA237"
       },
       "/test-invoke-stage/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Second-Api/Default/{proxy+}/ANY/ApiPermission.Test.PowerManagementCdkStackPowerManagementSecondApiAC3AFC3D.ANY..{proxy+}"
   }
  },
  "PowerManagementSecondApiproxyANY2CE180B2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "ANY",
    "ResourceId": {
     "Ref": "PowerManagementSecondApiproxyC6F378A0"
    },
    "RestApiId": {
     "Ref": "PowerManagementSecondApi099AA237"
    },
    "ApiKeyRequired": true,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PowerManagementFunctionBC05160B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "RequestParameters": {
     "method.request.path.proxy": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Second-Api/Default/{proxy+}/ANY/Resource"
   }
  },
  "PowerManagementApiKey971FB40E": {
   "Type": "AWS::ApiGateway::ApiKey",
   "Properties": {
    "Enabled": true,
    "Name": "PowerManagement-Second-Api-Key"
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagementApiKey/Resource"
   }
  },
  "PowerManagementSecondApiDeploymentA055D415b7f915f8efe120eaf20bfdff47716e0d": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "PowerManagementSecondApi099AA237"
    },
    "Description": "Deployment for the PowerManagement REST API"
   },
   "DependsOn": [
    "PowerManagementSecondApiproxyANY2CE180B2"
   ],
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Second-Api-Deployment/Resource"
   }
  },
  "PowerManagementSecondApiStage88F17782": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "PowerManagementSecondApi099AA237"
    },
    "DeploymentId": {
     "Ref": "PowerManagementSecondApiDeploymentA055D415b7f915f8efe120eaf20bfdff47716e0d"
    },
    "StageName": "production"
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Second-Api-Stage/Resource"
   }
  },
  "PowerManagementSecondApiUsagePlan32DC706C": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "PowerManagementSecondApi099AA237"
      },
      "Stage": {
       "Ref": "PowerManagementSecondApiStage88F17782"
      },
      "Throttle": {}
     }
    ],
    "UsagePlanName": "PowerManagement-Second-Api-Usage-Plan"
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Second-Api-Usage-Plan/Resource"
   }
  },
  "PowerManagementSecondApiUsagePlanUsagePlanKeyResourcePowerManagementCdkStackPowerManagementApiKey13A9211CCDDA6A21": {
   "Type": "AWS::ApiGateway::UsagePlanKey",
   "Properties": {
    "KeyId": {
     "Ref": "PowerManagementApiKey971FB40E"
    },
    "KeyType": "API_KEY",
    "UsagePlanId": {
     "Ref": "PowerManagementSecondApiUsagePlan32DC706C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/PowerManagement-Second-Api-Usage-Plan/UsagePlanKeyResource:PowerManagementCdkStackPowerManagementApiKey13A9211C"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21Ry07DMBD8lt4Tt6US4sKhD7gAJSqPa7VNlmBqx5F3Q1VF+XfWTipaqcphZ9bOZGZyo+6majKCA6V5sU+N3qn2jSHfJ7LathqsajfOYLL8quLMnNH5MdAedYkBuytAtY9NlbN2VTg7xxl6q4mEdQnNtkCETGoehnC1aPI98gIIE+NKUs+u3CBjFV8nssGP11WZgQcrBz5qnkiXQK1LYDzAUZwi8bzW0ewAV1gbd7SiF7ZnTFKWMVYP5L5rfI7RyIkMQj1+Qf52RVgNSOSfMFYxoA8SpcxAjH2dyLWu+9ePLQQDEvDiY4JfG64bvkgbyNJVhebY5srxGnl8qyZqOhur9cP70nmc13X6iT4Ufv87U9Ox/ODwjH5I69Q30qxFtennHx17x4QAAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "PowerManagementCdkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ApiMiddlewareLambdaUserArn": {
   "Value": {
    "Fn::GetAtt": [
     "PowerManagementFunctionBC05160B",
     "Arn"
    ]
   }
  },
  "PowerManagementSecondApiEndpointBBAD42F8": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PowerManagementSecondApi099AA237"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PowerManagementSecondApiDeploymentStageprodD44714C1"
      },
      "/"
     ]
    ]
   }
  },
  "ApiGatewayRestApiId": {
   "Value": {
    "Ref": "PowerManagementSecondApi099AA237"
   }
  }
 },
 "Parameters": {
  "SshActionPlan": {
   "Type": "String",
   "Description": "This is the Json that will define what will be done per keyword with the Ssh requests"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}